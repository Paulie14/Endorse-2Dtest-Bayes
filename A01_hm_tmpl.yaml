flow123d_version: 3.1.0
problem: !Coupling_Sequential
  description: Hydraulic stimulation of fractures connecting two open well ends
  mesh:
    mesh_file: <mesh>
    regions:
      - !Union
        name: .outer_boundary
#        regions: [.bottom, .top, .left, .right, .fix_left, .fix_bottom]
        regions: [.bottom, .top, .left, .right]
  flow_equation: !Coupling_Iterative
    input_fields:
      - region: BULK
        biot_alpha: <biot_coefficient>
        fluid_density: 1000
    time:
      end_time: <end_time>
      # common time unit cannot be used in field formulas
      common_time_unit: d
    iteration_parameter: 1 # affects convergence of HM coupling (defaults to 1, lower value sometimes helps)
    a_tol: 0
    r_tol: 1e-8
    flow_equation: !Flow_Richards_LMH
        nonlinear_solver:
          linear_solver: !Petsc
            a_tol: <flow_solver__a_tol>
            r_tol: <flow_solver__r_tol>
#            options: <flow_solver__options>
        input_fields:
          - region: BULK
            conductivity: <bulk_conductivity>
            # https://en.wikipedia.org/wiki/Specific_storage
            storativity: 2.8e-8 # S = rho * g * (beta_s + nu * beta_w)
            # bulk compressibility beta_s=0
            # porosity nu=0.007
            # water compressibility beta_w=0 1/Pa
            init_pressure: 300

          - region: .outer_boundary
            bc_type: dirichlet
            bc_pressure: 300 # 3MPa = p = h*rho*g => h = 300 m

#          - region: .tunnel
#            bc_type: dirichlet
#            bc_pressure: !FieldFormula
#              value: 300

          - region: .tunnel
            time: 0
            bc_type: dirichlet
            bc_pressure: !FieldFormula
              value: 300*(-1/(17*86400)*t + 1) # 1d=86400s
          - region: .tunnel
            time: 17
            bc_type: dirichlet
            bc_pressure: 0

          ### Trying prescribe b.c. using CSV (time evolving b.c.)
#          - region: .tunnel
#            time: 17
#            bc_type: dirichlet
#            bc_pressure: 0
#            bc_pressure: !FieldTimeFunction
#              time_function:
#                values: !include_csv
#                  file: bc_pressure_tunnel.csv
#                  separator: " "
#                  n_head_lines: 1
#                  format:
#                    t:
#                      time: $0
#                      unit: 'd'
#                    value: $1

        output:
          times: <output_times>
          fields:
            - piezo_head_p0
            - pressure_p0
            - velocity_p0
            - region_id
          observe_fields: [pressure_p0]
        #balance:
          #cumulative: true
        output_stream:
          file: flow.pvd
          format: !vtk
          observe_points: &observe_points
            - { name: HGT1-5, point: [ 0, 5.0, 0 ] }  # HGT1-5: 3.5 + 1.5
            - { name: HGT1-4, point: [ 0, 7.5, 0 ] }  # HGT1-4: 3.5 + 4
            - { name: HGT2-4, point: [ 5.875, 0, 0 ] }  # HGT2-4: 4.375 + 1.5
            - { name: HGT2-3, point: [ 8.375, 0, 0 ] }  # HGT2-3: 4.375 + 4
    mechanics_equation:
        output_stream:
          file: mechanics.pvd
          format: !vtk
          observe_points: *observe_points
        output:
          times: <output_times>
          fields:
#            - { field: displacement, interpolation: P1_average }
            - displacement
            - stress
            - displacement_divergence
            - region_id
          observe_fields: [displacement]
        solver: !Petsc
          a_tol: <mechanics_solver__a_tol>
          r_tol: <mechanics_solver__r_tol>
          options: <mechanics_solver__options>
        input_fields:
          - region: BULK
            young_modulus: 60e9
            poisson_ratio: 0.2

          ### Original b.c. according to TSX
#          - region: .top
#            bc_type: traction
#            bc_traction: [0, -11e6, 0]
#          - region: .right
#            bc_type: traction
#            bc_traction: [-45e6, 0, 0]
#          - region: [ .left, .bottom]
#            bc_type: displacement_n  # lateral sides can move in tangential direction
#            bc_displacement: 0
#          - region: [.fix_left, .fix_bottom]
#            bc_type: displacement
#            bc_displacement: 0

          - region: .outer_boundary
            bc_type: displacement
            bc_displacement: 0

          # bc_type stress prepocita tenzor napeti na normalovou silu, s normalou orientovanou dovnitr
          # bc_stress * vnitřní normála = bc_traction = síla působící na těleso
          # bc_stress je napětí v tělese, ne v okolí. Aby se z toho dostala síla působící na těleso (ne na okolí), musí se otočit znaménko
          - region: .tunnel
            time: 0
            bc_type: stress
            bc_stress: !FieldFormula
              value: [ 45e6*(1/(17*86400)*t), 11e6*(1/(17*86400)*t), 0] # 1d=86400s
          - region: .tunnel
            time: 17
            bc_type: stress
            bc_stress: !FieldFormula
              value: [ 45e6, 11e6, 0] # 1d=86400s

          ### "tahova" sila na hranici vrtu (proto zaporne znamenko)
#          - region: .tunnel
#            time: 0
#            bc_type: traction
#            bc_traction: !FieldFormula
#              value: [-45e6*(1/(17*86400)*t)*x / sqrt(x*x + (<tunnel_dimX>/<tunnel_dimY>)^4*y*y), -11e6*(1/(17*86400)*t)*y / sqrt((<tunnel_dimY>/<tunnel_dimX>)^4*x*x + y*y), 0] # 1d=86400s
#          - region: .tunnel
#            time: 17
#            bc_type: traction
#            bc_traction: !FieldFormula
#              value: [ -45e6*x / sqrt(x*x + (<tunnel_dimX>/<tunnel_dimY>)^4*y*y), -11e6*y / sqrt((<tunnel_dimY>/<tunnel_dimX>)^4*x*x + y*y), 0 ] # 1d=86400s